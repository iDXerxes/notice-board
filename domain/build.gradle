plugins {
    id 'java'
}

group = 'com.board.notice'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.modelmapper:modelmapper:2.3.0'
    implementation 'com.h2database:h2'

    // QueryDSL
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    implementation ("com.querydsl:querydsl-sql")
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-net:commons-net:3.9.0'
    implementation group: 'com.google.guava', name: 'guava', version: '25.0-jre'

    developmentOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
}

def querydslSrdDir = 'src/main/generated'

sourceSets {
    main {
        resources {
            srcDirs 'src/main/resources', 'src/main/resources/config'
        }
        java {
            srcDirs = ['src/main/java', querydslSrdDir]
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrdDir)
}

clean {
    delete file(querydslSrdDir)
}

task cleanGeneratedDir(type: Delete) {
    delete file(querydslSrdDir)
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}